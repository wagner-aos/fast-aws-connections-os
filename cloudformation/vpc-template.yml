---
Description: >-
  An AWS VPC with three subnets.
AWSTemplateFormatVersion: '2010-09-09'  
  StackName: FastAWSConnectionsVpc
  Description: This cloudformation template creates a VPC
  Parameters:
  - ParameterKey: CompanyName
    ParameterValue: AOS
  - ParameterKey: AccountSetupStack
    ParameterValue: AOSAccountSetup
  - ParameterKey: Az2
    ParameterValue: us-east-1d
  - ParameterKey: Environment
    ParameterValue: Dev
  - ParameterKey: Az1
    ParameterValue: us-east-1c
  - ParameterKey: Route53HostedZoneDomain
    ParameterValue: local.aos.com.br
  Resources:
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 172.31.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        InstanceTenancy: default
    InternetGateway:
      Type: AWS::EC2::InternetGateway

    VPCGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref VPC
        InternetGatewayId: !Ref InternetGateway
    
    SubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: us-east-1a
        VpcId: !Ref VPC
        CidrBlock: 172.31.0.0/20
        MapPublicIpOnLaunch: true
    SubnetB:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: us-east-1b
        VpcId: !Ref VPC
        CidrBlock: 172.31.16.0/20
        MapPublicIpOnLaunch: true
    SubnetC:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: us-east-1c
        VpcId: !Ref VPC
        CidrBlock: 172.31.32.0/20
        MapPublicIpOnLaunch: true
    RouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
    InternetRoute:
      Type: AWS::EC2::Route
      DependsOn: InternetGateway
      Properties:
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref InternetGateway
        RouteTableId: !Ref RouteTable
    SubnetARouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref SubnetA
    SubnetBRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref SubnetB
    SubnetCRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref SubnetC
    #Security Group
    SecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: "Internet Group"
        GroupDescription: "SSH traffic in, all traffic out."
        VpcId: !Ref VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '22'
            ToPort: '22'
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: -1
            CidrIp: 0.0.0.0/0




#https://sookocheff.com/post/aws/how-to-create-a-vpc-using-cloudformation/
  