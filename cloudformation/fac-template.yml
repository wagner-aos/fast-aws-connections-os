AWSTemplateFormatVersion: '2010-09-09'
Description: 'Stack to test Fast AWS Connections API'
Parameters:
  #VPC
  VpcStackName:
    Type: String
    Default: VeloeVpc
    Description: Hosted zone stack name defaults to FastAWSConnectionsHostedZone
  #Redis
  RedisClusterName:
    Type: String
    Description: >
      Specifies the ECS Cluster Name with which the resources would be
      associated
    Default: fast-aws-connections
  #Elastic Cache Node Types
  CacheNodeType:
    Type: String
    Default: cache.m1.small
    Description: >
      The compute and memory capacity of the nodes in the  Redis Cluster
    AllowedValues:
      - cache.t1.micro
      - cache.m1.small
      - cache.m1.medium
      - cache.m1.large
      - cache.m1.xlarge
      - cache.m2.xlarge
      - cache.m2.2xlarge
      - cache.m2.4xlarge
      - cache.m3.xlarge
      - cache.m3.2xlarge
      - cache.c1.xlarge
    ConstraintDescription: must select a valid Cache Node type
  #SQS
  QueueName:
    Type: String
  ReceiveMessageWaitTimeSeconds:
    Type: Number
  VisibilityTimeout:
    Type: Number
  MaximumMessageSize:
    Type: Number
  MessageRetentionPeriod:
    Type: Number
  DelaySeconds:
    Type: Number
  #Dynamo
  TableName:
    Type: String
  TableNamePolymorphic:
    Type: String
  #Kinesis

  
Resources:
  #SQS
  FastAWSConnetionsQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Ref QueueName
      MaximumMessageSize: !Ref MaximumMessageSize
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref ReceiveMessageWaitTimeSeconds
      VisibilityTimeout: !Ref VisibilityTimeout
      DelaySeconds: !Ref DelaySeconds
  #SQS Policy
  #https://docs.aws.amazon.com/pt_br/sns/latest/dg/SendMessageToSQS.html
  SendMessageFromTopicToQueuePolicy:
      Type: "AWS::SQS::QueuePolicy"
      Properties:        
        PolicyDocument:
          Id: SendMessageFromTopicToQueuePolicy
          Version: '2012-10-17'
          Statement:           
            - Sid: Allow-SendMessage-To-Queue-From-SNS-Topic
              Effect: Allow           
              Principal: "*"
              Action:
              - sqs:SendMessage
              Resource: "*"
        Queues: 
        - !Ref FastAWSConnetionsSQSTopicSubscribe
  #SNS      
  FastAWSConnetionsTopic:
    Type: "AWS::SNS::Topic"
    Properties: 
      TopicName: FastAWSConnetionsTopic
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - FastAWSConnetionsSQSTopicSubscribe
          - Arn
        Protocol: sqs
  #SQS Topic Subscribe  
  FastAWSConnetionsSQSTopicSubscribe:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: FastAWSConnetionsSQSTopicSubscribe
  #Dynamo
  FastAWSConnectionsGestaoIdentificadorTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
      - AttributeName: codIdentificador
        AttributeType: S
      - AttributeName: dataInclusao
        AttributeType: S
      - AttributeName: id
        AttributeType: S
      - AttributeName: idCliente
        AttributeType: N
      - AttributeName: idConta
        AttributeType: N
      - AttributeName: nuIdentificador
        AttributeType: N
      - AttributeName: placa
        AttributeType: S
      TableName: !Ref TableName
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
      GlobalSecondaryIndexes:
      - IndexName: _GIPlacaIndex
        KeySchema:
        - AttributeName: placa
          KeyType: HASH
        - AttributeName: dataInclusao
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
      - IndexName: _GIClienteContaIndex
        KeySchema:
        - AttributeName: idCliente
          KeyType: HASH
        - AttributeName: idConta
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
      - IndexName: _GINuIdentificadorIndex
        KeySchema:
        - AttributeName: nuIdentificador
          KeyType: HASH
        - AttributeName: dataInclusao
          KeyType: RANGE
        Projection:
          ProjectionType: ALL  
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
      - IndexName: _GICodIdentificadorIndex
        KeySchema:
        - AttributeName: codIdentificador
          KeyType: HASH
        - AttributeName: dataInclusao
          KeyType: RANGE
        Projection:
          ProjectionType: ALL  
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
  #Dynamo
  FastAWSConnectionsECPolymorphic:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
      - AttributeName: dataInclusao
        AttributeType: S
      - AttributeName: id
        AttributeType: N
      TableName: !Ref TableNamePolymorphic
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      - AttributeName: dataInclusao
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
  #Kinesis   
  FastAWSConnectionsStream:
    Type: "AWS::Kinesis::Stream"
    Properties: 
      Name: FastAWSConnectionsStream
      RetentionPeriodHours: 24
      ShardCount: 1
  #S3
  FastAWSConnectionsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: fast-aws-connections-bucket
  #ECS Security Group
  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Artesp cluster allowed ports
      VpcId:
        Fn::ImportValue:
          !Sub ${VpcStackName}-VpcId
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp:
            Fn::ImportValue:
              !Sub ${VpcStackName}-Cidr
        - 
          IpProtocol: -1
          CidrIp: '10.205.0.0/16'
        - 
          IpProtocol: -1
          CidrIp: '10.140.0.0/16'
        -
          IpProtocol: udp
          FromPort: 0
          ToPort: 65535
          CidrIp:
            Fn::ImportValue:
              !Sub ${VpcStackName}-Cidr
  #Cache Subnet Group            
  CacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnets available for the ElastiCache Cluster
      SubnetIds:
        - Fn::ImportValue:
            !Sub ${VpcStackName}-SubnetPriv1
        - Fn::ImportValue:
            !Sub ${VpcStackName}-SubnetPriv2
  #Elasticache Redis
  FastAWSConnectionsRedis:
    Type: "AWS::ElastiCache::CacheCluster"
    Properties:
      ClusterName: !Ref RedisClusterName
      CacheNodeType: !Ref CacheNodeType
      Engine: redis
      NumCacheNodes: 1
      CacheSubnetGroupName: !Ref CacheSubnetGroup
      VpcSecurityGroupIds:
        - !Ref EcsSecurityGroup
    